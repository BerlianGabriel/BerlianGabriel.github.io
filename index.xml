<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paper</title>
    <link>https://berliangabriel.github.io/</link>
    <description>Recent content on Paper</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 18 Oct 2023 19:33:11 +0700</lastBuildDate><atom:link href="https://berliangabriel.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TCP1P CTF 2023</title>
      <link>https://berliangabriel.github.io/post/tcp1p-ctf-2023/</link>
      <pubDate>Wed, 18 Oct 2023 19:33:11 +0700</pubDate>
      
      <guid>https://berliangabriel.github.io/post/tcp1p-ctf-2023/</guid>
      <description>It was an exhilarating experience to compete in TCP1P CTF as team Fidethus, with Chovid99 and Djavaa. Despite narrowly missing out on the Top 3, securing a 4th place finish was a tremendous honor, especially considering we were a three-member team competing against teams with many more members. Below is the write-up for some of the challenges that we solved. Cryptography Jack&amp;rsquo;s Worst Trials (7 Solves, 464 Points)
From the source code, it can be seen that the jwt.</description>
    </item>
    
    <item>
      <title>SECCON CTF 2022 Skipinx</title>
      <link>https://berliangabriel.github.io/post/seccon-ctf-2022-skipinx/</link>
      <pubDate>Tue, 17 Oct 2023 00:49:51 +0700</pubDate>
      
      <guid>https://berliangabriel.github.io/post/seccon-ctf-2022-skipinx/</guid>
      <description>I solved this challenge when competing with my team Fidethus, under the username berlian_gm. The files can be downloaded here and run locally with Docker.
The Problem The goal of this challenge, just like the title of the challenge implies, is to bypass the Nginx. Trying to access the port 8080 returns the following:
❯ curl localhost:8080/ Access here directly, not via nginx :( After checking nginx/default.conf, we can see that the Nginx append the following parameter: proxy=nginx at the end of the query parameter, before proxying the request to backend server.</description>
    </item>
    
  </channel>
</rss>
